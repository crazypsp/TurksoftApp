
// <auto-generated>
//  Controllers.AllGibEntities.Generated.tt tarafından üretildi.
//  Her entity için Gib{Entity}Controller : GibCrudController<{Entity}, IGib{Entity}Service> üretir.
//  Özel aksiyon ihtiyacında aynı isimle partial Gib{Entity}Controller açabilirsin (Controllers/Custom).
// </auto-generated>

using Microsoft.AspNetCore.Mvc;  
using TurkSoft.Entities.GIBEntityDB;                // GIB entities
using TurkSoft.Service.Interface.Gib;
using TurkSoft.GIBErpApi.Controllers.Common;        // GibCrudController

namespace TurkSoft.GibErpApi.Controllers
{
    /// <summary>GIB Address CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibAddressController : GibCrudController<Address, IGibAddressService>
    {
        public GibAddressController(IGibAddressService service) : base(service) { }
    }

    /// <summary>GIB Announcement CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibAnnouncementController : GibCrudController<Announcement, IGibAnnouncementService>
    {
        public GibAnnouncementController(IGibAnnouncementService service) : base(service) { }
    }

    /// <summary>GIB Bank CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibBankController : GibCrudController<Bank, IGibBankService>
    {
        public GibBankController(IGibBankService service) : base(service) { }
    }

    /// <summary>GIB Brand CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibBrandController : GibCrudController<Brand, IGibBrandService>
    {
        public GibBrandController(IGibBrandService service) : base(service) { }
    }

    /// <summary>GIB Category CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibCategoryController : GibCrudController<Category, IGibCategoryService>
    {
        public GibCategoryController(IGibCategoryService service) : base(service) { }
    }

    /// <summary>GIB City CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibCityController : GibCrudController<City, IGibCityService>
    {
        public GibCityController(IGibCityService service) : base(service) { }
    }

    /// <summary>GIB CommissionsMove CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibCommissionsMoveController : GibCrudController<CommissionsMove, IGibCommissionsMoveService>
    {
        public GibCommissionsMoveController(IGibCommissionsMoveService service) : base(service) { }
    }

    /// <summary>GIB Country CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibCountryController : GibCrudController<Country, IGibCountryService>
    {
        public GibCountryController(IGibCountryService service) : base(service) { }
    }

    /// <summary>GIB Currency CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibCurrencyController : GibCrudController<Currency, IGibCurrencyService>
    {
        public GibCurrencyController(IGibCurrencyService service) : base(service) { }
    }

    /// <summary>GIB Customer CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibCustomerController : GibCrudController<Customer, IGibCustomerService>
    {
        public GibCustomerController(IGibCustomerService service) : base(service) { }
    }

    /// <summary>GIB CustomersGroup CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibCustomersGroupController : GibCrudController<CustomersGroup, IGibCustomersGroupService>
    {
        public GibCustomersGroupController(IGibCustomersGroupService service) : base(service) { }
    }

    /// <summary>GIB CustomReport CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibCustomReportController : GibCrudController<CustomReport, IGibCustomReportService>
    {
        public GibCustomReportController(IGibCustomReportService service) : base(service) { }
    }

    /// <summary>GIB Dealer CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibDealerController : GibCrudController<Dealer, IGibDealerService>
    {
        public GibDealerController(IGibDealerService service) : base(service) { }
    }

    /// <summary>GIB Document CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibDocumentController : GibCrudController<Document, IGibDocumentService>
    {
        public GibDocumentController(IGibDocumentService service) : base(service) { }
    }

    /// <summary>GIB DocumentType CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibDocumentTypeController : GibCrudController<DocumentType, IGibDocumentTypeService>
    {
        public GibDocumentTypeController(IGibDocumentTypeService service) : base(service) { }
    }

    /// <summary>GIB ExchangeRate CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibExchangeRateController : GibCrudController<ExchangeRate, IGibExchangeRateService>
    {
        public GibExchangeRateController(IGibExchangeRateService service) : base(service) { }
    }

    /// <summary>GIB ExchangeRates CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibExchangeRatesController : GibCrudController<ExchangeRates, IGibExchangeRatesService>
    {
        public GibExchangeRatesController(IGibExchangeRatesService service) : base(service) { }
    }

    /// <summary>GIB GeneralReport CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibGeneralReportController : GibCrudController<GeneralReport, IGibGeneralReportService>
    {
        public GibGeneralReportController(IGibGeneralReportService service) : base(service) { }
    }

    /// <summary>GIB Group CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibGroupController : GibCrudController<Group, IGibGroupService>
    {
        public GibGroupController(IGibGroupService service) : base(service) { }
    }

    /// <summary>GIB Identifiers CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibIdentifiersController : GibCrudController<Identifiers, IGibIdentifiersService>
    {
        public GibIdentifiersController(IGibIdentifiersService service) : base(service) { }
    }

    /// <summary>GIB InfCode CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibInfCodeController : GibCrudController<InfCode, IGibInfCodeService>
    {
        public GibInfCodeController(IGibInfCodeService service) : base(service) { }
    }

    /// <summary>GIB Invoice CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibInvoiceController : GibCrudController<Invoice, IGibInvoiceService>
    {
        public GibInvoiceController(IGibInvoiceService service) : base(service) { }
    }

    /// <summary>GIB InvoicesDiscount CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibInvoicesDiscountController : GibCrudController<InvoicesDiscount, IGibInvoicesDiscountService>
    {
        public GibInvoicesDiscountController(IGibInvoicesDiscountService service) : base(service) { }
    }

    /// <summary>GIB InvoicesItem CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibInvoicesItemController : GibCrudController<InvoicesItem, IGibInvoicesItemService>
    {
        public GibInvoicesItemController(IGibInvoicesItemService service) : base(service) { }
    }

    /// <summary>GIB InvoicesPayment CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibInvoicesPaymentController : GibCrudController<InvoicesPayment, IGibInvoicesPaymentService>
    {
        public GibInvoicesPaymentController(IGibInvoicesPaymentService service) : base(service) { }
    }

    /// <summary>GIB InvoicesTax CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibInvoicesTaxController : GibCrudController<InvoicesTax, IGibInvoicesTaxService>
    {
        public GibInvoicesTaxController(IGibInvoicesTaxService service) : base(service) { }
    }

    /// <summary>GIB Item CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibItemController : GibCrudController<Item, IGibItemService>
    {
        public GibItemController(IGibItemService service) : base(service) { }
    }

    /// <summary>GIB ItemsCategory CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibItemsCategoryController : GibCrudController<ItemsCategory, IGibItemsCategoryService>
    {
        public GibItemsCategoryController(IGibItemsCategoryService service) : base(service) { }
    }

    /// <summary>GIB ItemsDiscount CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibItemsDiscountController : GibCrudController<ItemsDiscount, IGibItemsDiscountService>
    {
        public GibItemsDiscountController(IGibItemsDiscountService service) : base(service) { }
    }

    /// <summary>GIB ItemsExport CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibItemsExportController : GibCrudController<ItemsExport, IGibItemsExportService>
    {
        public GibItemsExportController(IGibItemsExportService service) : base(service) { }
    }

    /// <summary>GIB Log CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibLogController : GibCrudController<Log, IGibLogService>
    {
        public GibLogController(IGibLogService service) : base(service) { }
    }

    /// <summary>GIB Payment CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibPaymentController : GibCrudController<Payment, IGibPaymentService>
    {
        public GibPaymentController(IGibPaymentService service) : base(service) { }
    }

    /// <summary>GIB PaymentAccount CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibPaymentAccountController : GibCrudController<PaymentAccount, IGibPaymentAccountService>
    {
        public GibPaymentAccountController(IGibPaymentAccountService service) : base(service) { }
    }

    /// <summary>GIB PaymentType CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibPaymentTypeController : GibCrudController<PaymentType, IGibPaymentTypeService>
    {
        public GibPaymentTypeController(IGibPaymentTypeService service) : base(service) { }
    }

    /// <summary>GIB Permission CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibPermissionController : GibCrudController<Permission, IGibPermissionService>
    {
        public GibPermissionController(IGibPermissionService service) : base(service) { }
    }

    /// <summary>GIB ProcesingReport CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibProcesingReportController : GibCrudController<ProcesingReport, IGibProcesingReportService>
    {
        public GibProcesingReportController(IGibProcesingReportService service) : base(service) { }
    }

    /// <summary>GIB Purchase CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibPurchaseController : GibCrudController<Purchase, IGibPurchaseService>
    {
        public GibPurchaseController(IGibPurchaseService service) : base(service) { }
    }

    /// <summary>GIB PurchaseItem CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibPurchaseItemController : GibCrudController<PurchaseItem, IGibPurchaseItemService>
    {
        public GibPurchaseItemController(IGibPurchaseItemService service) : base(service) { }
    }

    /// <summary>GIB Request CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibRequestController : GibCrudController<Request, IGibRequestService>
    {
        public GibRequestController(IGibRequestService service) : base(service) { }
    }

    /// <summary>GIB Returns CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibReturnsController : GibCrudController<Returns, IGibReturnsService>
    {
        public GibReturnsController(IGibReturnsService service) : base(service) { }
    }

    /// <summary>GIB Role CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibRoleController : GibCrudController<Role, IGibRoleService>
    {
        public GibRoleController(IGibRoleService service) : base(service) { }
    }

    /// <summary>GIB RolePermission CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibRolePermissionController : GibCrudController<RolePermission, IGibRolePermissionService>
    {
        public GibRolePermissionController(IGibRolePermissionService service) : base(service) { }
    }

    /// <summary>GIB ServicesProvider CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibServicesProviderController : GibCrudController<ServicesProvider, IGibServicesProviderService>
    {
        public GibServicesProviderController(IGibServicesProviderService service) : base(service) { }
    }

    /// <summary>GIB Setting CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibSettingController : GibCrudController<Setting, IGibSettingService>
    {
        public GibSettingController(IGibSettingService service) : base(service) { }
    }

    /// <summary>GIB Sgk CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibSgkController : GibCrudController<Sgk, IGibSgkService>
    {
        public GibSgkController(IGibSgkService service) : base(service) { }
    }

    /// <summary>GIB Stock CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibStockController : GibCrudController<Stock, IGibStockService>
    {
        public GibStockController(IGibStockService service) : base(service) { }
    }

    /// <summary>GIB StockMovement CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibStockMovementController : GibCrudController<StockMovement, IGibStockMovementService>
    {
        public GibStockMovementController(IGibStockMovementService service) : base(service) { }
    }

    /// <summary>GIB Supplier CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibSupplierController : GibCrudController<Supplier, IGibSupplierService>
    {
        public GibSupplierController(IGibSupplierService service) : base(service) { }
    }

    /// <summary>GIB Tax CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibTaxController : GibCrudController<Tax, IGibTaxService>
    {
        public GibTaxController(IGibTaxService service) : base(service) { }
    }

    /// <summary>GIB Tourist CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibTouristController : GibCrudController<Tourist, IGibTouristService>
    {
        public GibTouristController(IGibTouristService service) : base(service) { }
    }

    /// <summary>GIB Unit CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibUnitController : GibCrudController<Unit, IGibUnitService>
    {
        public GibUnitController(IGibUnitService service) : base(service) { }
    }

    /// <summary>GIB User CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibUserController : GibCrudController<User, IGibUserService>
    {
        public GibUserController(IGibUserService service) : base(service) { }
    }

    /// <summary>GIB UserAnnouncementRead CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibUserAnnouncementReadController : GibCrudController<UserAnnouncementRead, IGibUserAnnouncementReadService>
    {
        public GibUserAnnouncementReadController(IGibUserAnnouncementReadService service) : base(service) { }
    }

    /// <summary>GIB UserRole CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibUserRoleController : GibCrudController<UserRole, IGibUserRoleService>
    {
        public GibUserRoleController(IGibUserRoleService service) : base(service) { }
    }

    /// <summary>GIB Users CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibUsersController : GibCrudController<Users, IGibUsersService>
    {
        public GibUsersController(IGibUsersService service) : base(service) { }
    }

    /// <summary>GIB Warehouse CRUD</summary>
    [ApiVersion("1.0")]
    [Route("api/v{version:apiVersion}/[controller]")]
    [ApiController]
    public partial class GibWarehouseController : GibCrudController<Warehouse, IGibWarehouseService>
    {
        public GibWarehouseController(IGibWarehouseService service) : base(service) { }
    }

}
