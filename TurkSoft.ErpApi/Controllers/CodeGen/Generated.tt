<#@ template language="C#" debug="false" hostspecific="false" #>  // T4 template bildirimi (C# motoru)
<#@ output extension=".cs" #>                                     // Üretilen dosya uzantısı .cs
<#@ assembly name="System.Core" #>                                // Temel .NET assembly referansı
<#@ import namespace="System" #>                                  // System isim alanını içeri al
<#@ import namespace="System.Collections.Generic" #>              // Koleksiyonlar için

// <auto-generated>
//  Controllers.AllEntities.Generated.tt tarafından üretildi.
//  Her entity için {Entity}Controller : CrudController<{Entity}, I{Entity}Service> sınıfını üretir.
//  Not: Özel aksiyonlara ihtiyaç duyarsan aynı isimle partial {Entity}Controller açabilirsin (Controllers/Custom).
// </auto-generated>

using Microsoft.AspNetCore.Mvc;                                   // Controller öznitelikleri için
using TurkSoft.ErpApi.Controllers.Common;                         // CrudController<> base sınıfı
using TurkSoft.Entities.EntityDB;                                 // Entity sınıfları (T tipi)
using TurkSoft.Service.Interface;                                 // I{Entity}Service arayüzleri

namespace TurkSoft.ErpApi.Controllers
{
<#
    // BURAYA Entity adlarını yazıyoruz. Yeni entity eklediğinde bu diziye adını ekle, dosyayı kaydet → otomatik controller üretir.
    var entities = new[]{
        "Kullanici","Log","MailAyar","MailGonderim","SmsAyar","SmsGonderim","WhatsappAyar","WhatsappGonderim",
        "Luca","KeyAccount","UrunTipi","Paket","UrunFiyat","PaketIskonto",
        "Bayi","BayiFirma","MaliMusavir","Firma",
        "Satis","SatisKalem","Lisans","LisansAdet",
        "Odeme","SanalPos","EntegrasyonHesabi",
        "Lead","OpportunityAsama","Opportunity","OpportunityAsamaGecis",
        "Teklif","TeklifKalem",
        "Aktivite","AktiviteAtama","IletisimKisi",
        "Fatura","FaturaKalem",
        "BayiCari","BayiCariHareket","KomisyonOdemePlani","BayiKomisyonTarife",
        "FiyatListesi","FiyatListesiKalem","VergiOrani","Kupon",
        "Not","DosyaEk","Etiket","EtiketIliski",
        "SistemBildirim","OutboxMesaj","WebhookAbonelik"
    };

    // Her entity için bir controller sınıfı üret
    foreach (var e in entities)
    {
#>
    /// <summary>
    /// <#= e #> CRUD API — Standart aksiyonlar (GET/GET{id}/POST/PUT/DELETE) CrudController’dan miras alınır.
    /// </summary>
    [ApiVersion("1.0")]                                             // v1.0 etiket
    [Route("api/v{version:apiVersion}/[controller]")]               // Örn: /api/v1/Firma
    [ApiController]                                                 // Otomatik model doğrulama vb.
    public partial class <#= e #>Controller : CrudController<<#= e #>, I<#= e #>Service>
    {
        // DI ile ilgili servisi al ve base sınıfa ilet
        public <#= e #>Controller(I<#= e #>Service service) : base(service) { }
    }

<#
    } // foreach
#>
}
