// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TurkSoft.Data.Context;

#nullable disable

namespace TurkSoft.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250827103057_AddUserRelationsDomainDB")]
    partial class AddUserRelationsDomainDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KeyAccount_MaliMusavir", b =>
                {
                    b.Property<Guid>("KeyAccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaliMusavirId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KeyAccountId", "MaliMusavirId");

                    b.HasIndex("MaliMusavirId");

                    b.ToTable("KeyAccount_MaliMusavir", (string)null);
                });

            modelBuilder.Entity("Luca_MaliMusavir", b =>
                {
                    b.Property<Guid>("LucaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaliMusavirId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LucaId", "MaliMusavirId");

                    b.HasIndex("MaliMusavirId");

                    b.ToTable("Luca_MaliMusavir", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Aktivite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GerceklesenTarih")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IlgiliId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IlgiliKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IlgiliTip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("PlanlananTarih")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Tur")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IlgiliKullaniciId");

                    b.HasIndex("IsActive");

                    b.HasIndex("BayiId", "Tur", "PlanlananTarih");

                    b.ToTable("Aktiviteler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.AktiviteAtama", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AktiviteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("AktiviteId", "KullaniciId")
                        .IsUnique();

                    b.ToTable("AktiviteAtamalari");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Bayi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<Guid?>("OlusturanKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("OlusturanKullaniciId");

                    b.ToTable("Bayi", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiCari", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Bakiye")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BayiId")
                        .IsUnique();

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("BayiCariler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiCariHareket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BayiCariId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReferansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReferansTip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("BayiCariId", "IslemTarihi");

                    b.ToTable("BayiCariHareketleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiFirma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VergiNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BayiId")
                        .IsUnique();

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("BayiFirma", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiKomisyonTarife", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Baslangic")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Bitis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("KomisyonYuzde")
                        .HasColumnType("decimal(5,2)");

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("PaketId");

                    b.HasIndex("BayiId", "PaketId", "Baslangic", "Bitis");

                    b.ToTable("BayiKomisyonTarife", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.DosyaEk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Boyut")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DosyaAdi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("IcerikTipi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("IlgiliId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IlgiliTip")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Yol")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("IlgiliId", "IlgiliTip");

                    b.ToTable("DosyaEkleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.EntegrasyonHesabi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ApiUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FirmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("MaliMusavirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SistemTipi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VeritabaniAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("FirmaId");

                    b.HasIndex("IsActive");

                    b.HasIndex("MaliMusavirId", "FirmaId", "SistemTipi");

                    b.ToTable("EntegrasyonHesabi", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Etiket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Ad");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("Etiketler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.EtiketIliski", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EtiketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IlgiliId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IlgiliTip")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("EtiketId", "IlgiliId", "IlgiliTip")
                        .IsUnique();

                    b.ToTable("EtiketIliskileri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Fatura", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<string>("FaturaNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("FaturaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FirmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Kdvoran")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Kdvtutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Net")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid?>("SatisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.Property<decimal>("Toplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BayiId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("FaturaNo")
                        .IsUnique();

                    b.HasIndex("FirmaId");

                    b.HasIndex("IsActive");

                    b.HasIndex("SatisId");

                    b.ToTable("Faturalar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.FaturaKalem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FaturaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Miktar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("FaturaId");

                    b.HasIndex("IsActive");

                    b.HasIndex("PaketId");

                    b.ToTable("FaturaKalemleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Firma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirmaAdi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("MaliMusavirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VergiNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("YetkiliAdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BayiId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("MaliMusavirId");

                    b.ToTable("Firmalar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.FiyatListesi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Baslangic")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Bitis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.HasIndex("BayiId", "Baslangic", "Bitis");

                    b.ToTable("FiyatListeleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.FiyatListesiKalem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FiyatListesiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("PaketId");

                    b.HasIndex("FiyatListesiId", "PaketId")
                        .IsUnique();

                    b.ToTable("FiyatListesiKalemleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.IletisimKisi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("FirmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("FirmaId", "AdSoyad");

                    b.ToTable("IletisimKisileri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KeyAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("KeyAccount", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KomisyonOdemePlani", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DonemAy")
                        .HasColumnType("int");

                    b.Property<int>("DonemYil")
                        .HasColumnType("int");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("ToplamKomisyon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("BayiId", "DonemYil", "DonemAy")
                        .IsUnique();

                    b.ToTable("KomisyonOdemePlanlari");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Kullanici", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ProfilResmiUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("Eposta")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.ToTable("Kullanicilar");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            AdSoyad = "Sistem Yöneticisi",
                            CreateDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Eposta = "admin@turksoft.local",
                            IsActive = true,
                            Rol = "Admin",
                            Sifre = "Admin!12345",
                            Telefon = "+90 555 000 0000"
                        });
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KullaniciBayi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AtananRol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BayiId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("KullaniciId")
                        .IsUnique()
                        .HasFilter("[IsPrimary] = 1");

                    b.HasIndex("KullaniciId", "BayiId")
                        .IsUnique();

                    b.ToTable("Kullanici_Bayi", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KullaniciFirma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AtananRol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FirmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("FirmaId");

                    b.HasIndex("IsActive");

                    b.HasIndex("KullaniciId")
                        .IsUnique()
                        .HasFilter("[IsPrimary] = 1");

                    b.HasIndex("KullaniciId", "FirmaId")
                        .IsUnique();

                    b.ToTable("Kullanici_Firma", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KullaniciMaliMusavir", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AtananRol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<Guid>("KullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaliMusavirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("KullaniciId")
                        .IsUnique()
                        .HasFilter("[IsPrimary] = 1");

                    b.HasIndex("MaliMusavirId");

                    b.HasIndex("KullaniciId", "MaliMusavirId")
                        .IsUnique();

                    b.ToTable("Kullanici_MaliMusavir", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Kupon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Baslangic")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Bitis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("IndirimTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IndirimYuzde")
                        .HasColumnType("decimal(5,2)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Kullanildi")
                        .HasColumnType("int");

                    b.Property<int>("MaksKullanim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BayiId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("Kuponlar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Lead", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Kaynak")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LeadNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid?>("SorumluKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BayiId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("LeadNo")
                        .IsUnique();

                    b.HasIndex("SorumluKullaniciId");

                    b.ToTable("Leadler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Lisans", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LisansAnahtari")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("SatisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("YenilendiMi")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("SatisId");

                    b.HasIndex("BaslangicTarihi", "BitisTarihi");

                    b.ToTable("Lisanslar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.LisansAdet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("KuruluCihazSayisi")
                        .HasColumnType("int");

                    b.Property<int?>("Limit")
                        .HasColumnType("int");

                    b.Property<Guid>("LisansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("LisansId");

                    b.ToTable("LisansAdetler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Islem")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Tarayici")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("Loglar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Luca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UyeNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("Luca", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.MailAyar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Port")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(587);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<bool>("SSLKullan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SmtpServer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Eposta", "SmtpServer");

                    b.ToTable("MailAyarlar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.MailGonderim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alici")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("BasariliMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("MailGonderimler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.MaliMusavir", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TCKN")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VergiNo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("BayiId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("MaliMusavirler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Not", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid?>("IlgiliId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IlgiliTip")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("OlusturanUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Tip")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("OlusturanUserId");

                    b.HasIndex("IlgiliId", "IlgiliTip");

                    b.ToTable("Notlar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Odeme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("KomisyonOrani")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal?>("KomisyonTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NetTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OdemeDurumu")
                        .HasColumnType("int");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("OdemeYontemi")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SaglayiciIslemNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("SanalPosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SatisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Taksit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("SaglayiciIslemNo");

                    b.HasIndex("SanalPosId");

                    b.HasIndex("SatisId", "OdemeTarihi", "OdemeDurumu");

                    b.ToTable("Odeme", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Opportunity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AsamaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<Guid?>("FirmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirsatNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid?>("MaliMusavirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<decimal>("TahminiTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AsamaId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("FirmaId");

                    b.HasIndex("FirsatNo")
                        .IsUnique();

                    b.HasIndex("IsActive");

                    b.HasIndex("MaliMusavirId");

                    b.HasIndex("BayiId", "AsamaId", "OlusturmaTarihi");

                    b.ToTable("Opportunities");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.OpportunityAsama", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("OlasilikYuzde")
                        .HasColumnType("decimal(5,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("OpportunityAsamalari");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.OpportunityAsamaGecis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromAsamaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("GecisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("OpportunityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("ToAsamaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("FromAsamaId");

                    b.HasIndex("IsActive");

                    b.HasIndex("OpportunityId");

                    b.HasIndex("ToAsamaId");

                    b.ToTable("OpportunityAsamaGecisleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.OutboxMesaj", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IcerikJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("IslenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Islenmis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Islenmis", "CreateDate");

                    b.ToTable("OutboxMesajlari");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Paket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UrunTipiId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("UrunTipiId");

                    b.ToTable("Paketler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.PaketIskonto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Baslangic")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Bitis")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("IskontoYuzde")
                        .HasColumnType("decimal(5,2)");

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BayiId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("PaketId", "BayiId", "Baslangic", "Bitis");

                    b.ToTable("PaketIskonto", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.SanalPos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ApiSecret")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("BaseApiUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid?>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("MerchantId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PosAnahtar")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Saglayici")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("StandartKomisyonYuzde")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("BayiId", "Saglayici");

                    b.ToTable("SanalPos", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Satis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FirmaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("IskontoTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KDVOrani")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("KDVTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MaliMusavirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("NetTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("SatisDurumu")
                        .HasColumnType("int");

                    b.Property<string>("SatisNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("SatisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("FirmaId");

                    b.HasIndex("IsActive");

                    b.HasIndex("MaliMusavirId");

                    b.HasIndex("PaketId");

                    b.HasIndex("SatisNo")
                        .IsUnique();

                    b.HasIndex("BayiId", "MaliMusavirId", "SatisTarihi");

                    b.ToTable("Satis", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.SatisKalem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Miktar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("SatisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("PaketId");

                    b.HasIndex("SatisId");

                    b.ToTable("SatisKalem", (string)null);
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.SistemBildirim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<Guid?>("HedefKullaniciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Kanal")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PlanlananTarih")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Kanal", "PlanlananTarih", "Durum");

                    b.ToTable("SistemBildirimleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.SmsAyar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ApiSecret")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GondericiAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("SmsAyarlar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.SmsGonderim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AliciNumara")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("BasariliMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("SmsGonderimler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Teklif", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Durum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GecerlilikBitis")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<decimal>("Kdvoran")
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("Kdvtutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Net")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("OpportunityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("TeklifNo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Toplam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("OpportunityId");

                    b.HasIndex("PaketId");

                    b.HasIndex("TeklifNo")
                        .IsUnique();

                    b.ToTable("Teklifler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.TeklifKalem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("Miktar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<Guid>("TeklifId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("PaketId");

                    b.HasIndex("TeklifId");

                    b.ToTable("TeklifKalemleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.UrunFiyat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GecerlilikBaslangic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GecerlilikBitis")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("PaketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParaBirimi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("PaketId", "GecerlilikBaslangic", "GecerlilikBitis");

                    b.ToTable("UrunFiyatlar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.UrunTipi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("UrunTipleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.VergiOrani", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Oran")
                        .HasColumnType("decimal(5,2)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("Kod")
                        .IsUnique();

                    b.ToTable("VergiOranlari");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.WebhookAbonelik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BayiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IletiGizliAnahtar")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.HasIndex("BayiId", "Event")
                        .IsUnique();

                    b.ToTable("WebhookAbonelikleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.WhatsappAyar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApiUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Numara")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("WhatsappAyarlar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.WhatsappGonderim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AliciNumara")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("BasariliMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreateDate");

                    b.HasIndex("IsActive");

                    b.ToTable("WhatsappGonderimler");
                });

            modelBuilder.Entity("KeyAccount_MaliMusavir", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.KeyAccount", null)
                        .WithMany()
                        .HasForeignKey("KeyAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.MaliMusavir", null)
                        .WithMany()
                        .HasForeignKey("MaliMusavirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Luca_MaliMusavir", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Luca", null)
                        .WithMany()
                        .HasForeignKey("LucaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.MaliMusavir", null)
                        .WithMany()
                        .HasForeignKey("MaliMusavirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Aktivite", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("Aktiviteler")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Kullanici", "IlgiliKullanici")
                        .WithMany()
                        .HasForeignKey("IlgiliKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bayi");

                    b.Navigation("IlgiliKullanici");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.AktiviteAtama", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Aktivite", "Aktivite")
                        .WithMany("Atamalar")
                        .HasForeignKey("AktiviteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aktivite");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Bayi", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Kullanici", "OlusturanKullanici")
                        .WithMany()
                        .HasForeignKey("OlusturanKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("OlusturanKullanici");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiCari", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("BayiCariler")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bayi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiCariHareket", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.BayiCari", "BayiCari")
                        .WithMany("Hareketler")
                        .HasForeignKey("BayiCariId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BayiCari");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiFirma", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithOne("BayiFirma")
                        .HasForeignKey("TurkSoft.Entities.EntityDB.BayiFirma", "BayiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bayi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiKomisyonTarife", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("KomisyonTarifeleri")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany("BayiKomisyonTarifeleri")
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bayi");

                    b.Navigation("Paket");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.EntegrasyonHesabi", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Firma", "Firma")
                        .WithMany("EntegrasyonHesaplari")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TurkSoft.Entities.EntityDB.MaliMusavir", "MaliMusavir")
                        .WithMany("EntegrasyonHesaplari")
                        .HasForeignKey("MaliMusavirId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Firma");

                    b.Navigation("MaliMusavir");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.EtiketIliski", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Etiket", "Etiket")
                        .WithMany("Iliskiler")
                        .HasForeignKey("EtiketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etiket");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Fatura", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("Faturalar")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Firma", "Firma")
                        .WithMany("Faturalar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Satis", "Satis")
                        .WithMany("Faturalar")
                        .HasForeignKey("SatisId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bayi");

                    b.Navigation("Firma");

                    b.Navigation("Satis");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.FaturaKalem", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Fatura", "Fatura")
                        .WithMany("Kalemler")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany()
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Fatura");

                    b.Navigation("Paket");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Firma", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("Firmalar")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TurkSoft.Entities.EntityDB.MaliMusavir", "MaliMusavir")
                        .WithMany("Firmalar")
                        .HasForeignKey("MaliMusavirId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bayi");

                    b.Navigation("MaliMusavir");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.FiyatListesi", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("FiyatListeleri")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bayi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.FiyatListesiKalem", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.FiyatListesi", "FiyatListesi")
                        .WithMany("Kalemler")
                        .HasForeignKey("FiyatListesiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany()
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FiyatListesi");

                    b.Navigation("Paket");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.IletisimKisi", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Firma", "Firma")
                        .WithMany("IletisimKisileri")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("TurkSoft.Entities.EntityDB.Adres", "Adres", b1 =>
                        {
                            b1.Property<Guid>("IletisimKisiId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AcikAdres")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<DateTime>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DeleteDate")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Ilce")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<bool>("IsActive")
                                .HasColumnType("bit");

                            b1.Property<string>("PostaKodu")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Sehir")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Ulke")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("IletisimKisiId");

                            b1.ToTable("IletisimKisileri");

                            b1.WithOwner()
                                .HasForeignKey("IletisimKisiId");
                        });

                    b.Navigation("Adres")
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KomisyonOdemePlani", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("KomisyonOdemePlanlari")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bayi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KullaniciBayi", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("KullaniciBaglantilari")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Kullanici", "Kullanici")
                        .WithMany("BayiBaglantilari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bayi");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KullaniciFirma", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Firma", "Firma")
                        .WithMany("KullaniciBaglantilari")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Kullanici", "Kullanici")
                        .WithMany("FirmaBaglantilari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Firma");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.KullaniciMaliMusavir", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Kullanici", "Kullanici")
                        .WithMany("MaliMusavirBaglantilari")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.MaliMusavir", "MaliMusavir")
                        .WithMany("KullaniciBaglantilari")
                        .HasForeignKey("MaliMusavirId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("MaliMusavir");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Kupon", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("Kuponlar")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bayi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Lead", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("Leadler")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Kullanici", "SorumluKullanici")
                        .WithMany()
                        .HasForeignKey("SorumluKullaniciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("TurkSoft.Entities.EntityDB.Adres", "Adres", b1 =>
                        {
                            b1.Property<Guid>("LeadId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("AcikAdres")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("nvarchar(500)");

                            b1.Property<DateTime>("CreateDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("DeleteDate")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Ilce")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<bool>("IsActive")
                                .HasColumnType("bit");

                            b1.Property<string>("PostaKodu")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<string>("Sehir")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("Ulke")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<DateTime?>("UpdateDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("LeadId");

                            b1.ToTable("Leadler");

                            b1.WithOwner()
                                .HasForeignKey("LeadId");
                        });

                    b.Navigation("Adres")
                        .IsRequired();

                    b.Navigation("Bayi");

                    b.Navigation("SorumluKullanici");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Lisans", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Satis", "Satis")
                        .WithMany("Lisanslar")
                        .HasForeignKey("SatisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Satis");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.LisansAdet", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Lisans", "Lisans")
                        .WithMany()
                        .HasForeignKey("LisansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lisans");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.MaliMusavir", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("MaliMusavirler")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bayi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Not", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Kullanici", "Olusturan")
                        .WithMany()
                        .HasForeignKey("OlusturanUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Olusturan");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Odeme", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.SanalPos", "SanalPos")
                        .WithMany("Odemeler")
                        .HasForeignKey("SanalPosId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TurkSoft.Entities.EntityDB.Satis", "Satis")
                        .WithMany("Odemeler")
                        .HasForeignKey("SatisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanalPos");

                    b.Navigation("Satis");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Opportunity", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.OpportunityAsama", "Asama")
                        .WithMany()
                        .HasForeignKey("AsamaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("Firsatlar")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Firma", "Firma")
                        .WithMany("Firsatlar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TurkSoft.Entities.EntityDB.MaliMusavir", "MaliMusavir")
                        .WithMany("Firsatlar")
                        .HasForeignKey("MaliMusavirId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Asama");

                    b.Navigation("Bayi");

                    b.Navigation("Firma");

                    b.Navigation("MaliMusavir");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.OpportunityAsamaGecis", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.OpportunityAsama", "FromAsama")
                        .WithMany()
                        .HasForeignKey("FromAsamaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Opportunity", "Opportunity")
                        .WithMany("AsamaGecisleri")
                        .HasForeignKey("OpportunityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.OpportunityAsama", "ToAsama")
                        .WithMany()
                        .HasForeignKey("ToAsamaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FromAsama");

                    b.Navigation("Opportunity");

                    b.Navigation("ToAsama");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Paket", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.UrunTipi", "UrunTipi")
                        .WithMany("Paketler")
                        .HasForeignKey("UrunTipiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UrunTipi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.PaketIskonto", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("PaketIskontolari")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany("PaketIskontolar")
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bayi");

                    b.Navigation("Paket");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.SanalPos", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("SanalPoslar")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bayi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Satis", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("Satislar")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Firma", "Firma")
                        .WithMany("Satislar")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TurkSoft.Entities.EntityDB.MaliMusavir", "MaliMusavir")
                        .WithMany("Satislar")
                        .HasForeignKey("MaliMusavirId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany("Satislar")
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bayi");

                    b.Navigation("Firma");

                    b.Navigation("MaliMusavir");

                    b.Navigation("Paket");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.SatisKalem", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany()
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Satis", "Satis")
                        .WithMany("Kalemler")
                        .HasForeignKey("SatisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paket");

                    b.Navigation("Satis");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Teklif", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Opportunity", "Opportunity")
                        .WithMany("Teklifler")
                        .HasForeignKey("OpportunityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany("Teklifler")
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Opportunity");

                    b.Navigation("Paket");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.TeklifKalem", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany()
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TurkSoft.Entities.EntityDB.Teklif", "Teklif")
                        .WithMany("Kalemler")
                        .HasForeignKey("TeklifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paket");

                    b.Navigation("Teklif");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.UrunFiyat", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Paket", "Paket")
                        .WithMany("UrunFiyatlar")
                        .HasForeignKey("PaketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paket");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.WebhookAbonelik", b =>
                {
                    b.HasOne("TurkSoft.Entities.EntityDB.Bayi", "Bayi")
                        .WithMany("WebhookAbonelikleri")
                        .HasForeignKey("BayiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bayi");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Aktivite", b =>
                {
                    b.Navigation("Atamalar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Bayi", b =>
                {
                    b.Navigation("Aktiviteler");

                    b.Navigation("BayiCariler");

                    b.Navigation("BayiFirma")
                        .IsRequired();

                    b.Navigation("Faturalar");

                    b.Navigation("Firmalar");

                    b.Navigation("Firsatlar");

                    b.Navigation("FiyatListeleri");

                    b.Navigation("KomisyonOdemePlanlari");

                    b.Navigation("KomisyonTarifeleri");

                    b.Navigation("KullaniciBaglantilari");

                    b.Navigation("Kuponlar");

                    b.Navigation("Leadler");

                    b.Navigation("MaliMusavirler");

                    b.Navigation("PaketIskontolari");

                    b.Navigation("SanalPoslar");

                    b.Navigation("Satislar");

                    b.Navigation("WebhookAbonelikleri");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.BayiCari", b =>
                {
                    b.Navigation("Hareketler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Etiket", b =>
                {
                    b.Navigation("Iliskiler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Fatura", b =>
                {
                    b.Navigation("Kalemler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Firma", b =>
                {
                    b.Navigation("EntegrasyonHesaplari");

                    b.Navigation("Faturalar");

                    b.Navigation("Firsatlar");

                    b.Navigation("IletisimKisileri");

                    b.Navigation("KullaniciBaglantilari");

                    b.Navigation("Satislar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.FiyatListesi", b =>
                {
                    b.Navigation("Kalemler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Kullanici", b =>
                {
                    b.Navigation("BayiBaglantilari");

                    b.Navigation("FirmaBaglantilari");

                    b.Navigation("MaliMusavirBaglantilari");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.MaliMusavir", b =>
                {
                    b.Navigation("EntegrasyonHesaplari");

                    b.Navigation("Firmalar");

                    b.Navigation("Firsatlar");

                    b.Navigation("KullaniciBaglantilari");

                    b.Navigation("Satislar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Opportunity", b =>
                {
                    b.Navigation("AsamaGecisleri");

                    b.Navigation("Teklifler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Paket", b =>
                {
                    b.Navigation("BayiKomisyonTarifeleri");

                    b.Navigation("PaketIskontolar");

                    b.Navigation("Satislar");

                    b.Navigation("Teklifler");

                    b.Navigation("UrunFiyatlar");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.SanalPos", b =>
                {
                    b.Navigation("Odemeler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Satis", b =>
                {
                    b.Navigation("Faturalar");

                    b.Navigation("Kalemler");

                    b.Navigation("Lisanslar");

                    b.Navigation("Odemeler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.Teklif", b =>
                {
                    b.Navigation("Kalemler");
                });

            modelBuilder.Entity("TurkSoft.Entities.EntityDB.UrunTipi", b =>
                {
                    b.Navigation("Paketler");
                });
#pragma warning restore 612, 618
        }
    }
}
