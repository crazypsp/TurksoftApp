<#@ template language="C#" debug="false" hostspecific="false" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>

// <auto-generated>
//  Bu dosya T4 tarafından üretildi (Services.AllEntities.Generated.tt).
//  Elle düzenlemeyin; değişiklikleri .tt içinde yapın ve kaydedin.
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using TurkSoft.Entities.EntityDB;
using TurkSoft.Business.Interface;
using TurkSoft.Service.Interface;
using TurkSoft.Service.Manager;

namespace TurkSoft.Service.Interface
{
<#
    var entities = new[]{
        "Kullanici","KullaniciBayi","KullaniciFirma","KullaniciMaliMusavir","Log","MailAyar","MailGonderim","SmsAyar","SmsGonderim","WhatsappAyar","WhatsappGonderim",
        "Luca","KeyAccount","UrunTipi","Paket","UrunFiyat","PaketIskonto",
        "Bayi","BayiFirma","MaliMusavir","Firma",
        "Satis","SatisKalem","Lisans","LisansAdet",
        "Odeme","SanalPos","EntegrasyonHesabi",
        "Lead","OpportunityAsama","Opportunity","OpportunityAsamaGecis",
        "Teklif","TeklifKalem",
        "Aktivite","AktiviteAtama","IletisimKisi",
        "Fatura","FaturaKalem",
        "BayiCari","BayiCariHareket","KomisyonOdemePlani","BayiKomisyonTarife",
        "FiyatListesi","FiyatListesiKalem","VergiOrani","Kupon",
        "Not","DosyaEk","Etiket","EtiketIliski",
        "SistemBildirim","OutboxMesaj","WebhookAbonelik"
    };
    foreach (var e in entities)
    {
#>
    /// <summary> <#= e #> varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface I<#= e #>Service : IEntityService<<#= e #>> { }
<#
    }
#>
}

namespace TurkSoft.Service.Manager
{
<#
    foreach (var e in entities)
    {
#>
    /// <summary> <#= e #> varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class <#= e #>Manager : EntityManager<<#= e #>>, TurkSoft.Service.Interface.I<#= e #>Service
    {
        /// <summary> DI ile IBaseService&lt;<#= e #>&gt; enjekte edilir. </summary>
        public <#= e #>Manager(IBaseService<<#= e #>> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
<#
    }
#>
}
