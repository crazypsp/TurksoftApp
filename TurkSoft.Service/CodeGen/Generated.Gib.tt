<#@ template language="C#" debug="false" hostspecific="false" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>

// <auto-generated>
//  Bu dosya T4 tarafından üretildi (Services.AllGibEntities.Generated.tt).
//  Elle düzenlemeyin; değişiklikleri .tt içinde yapın ve kaydedin.
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using TurkSoft.Entities.GIBEntityDB;
using TurkSoft.Service.Interface.Gib;
using TurkSoft.Service.Manager.Gib;

namespace TurkSoft.Service.Interface.Gib
{
<#
    // GIB tarafındaki entity listesi: GibAppDbContext.cs dosyandaki DbSet<> adlarıyla birebir.
    var gibEntities = new[]{
        "Address","Announcement","Bank","Brand","Category","City","CommissionsMove","Country","Currency",
        "Customer","CustomersGroup","CustomReport","Dealer","Document","DocumentType","ExchangeRate","ExchangeRates",
        "GeneralReport","Group","Identifiers","InfCode","Invoice","InvoicesDiscount","InvoicesItem","InvoicesPayment",
        "InvoicesTax","Item","ItemsCategory","ItemsDiscount","ItemsExport","Log","Payment","PaymentAccount","PaymentType",
        "Permission","ProcesingReport","Purchase","PurchaseItem","Request","Returns","Role","RolePermission","ServicesProvider",
        "Setting","Sgk","Stock","StockMovement","Supplier","Tax","Tourist","Unit","User","UserAnnouncementRead","UserRole",
        "Users","Warehouse"
    };

    foreach (var e in gibEntities)
    {
#>
    /// <summary> <#= e #> varlığı için GIB servis sözleşmesi. </summary>
    public partial interface IGib<#= e #>Service : IEntityGibService<<#= e #>, long> { }
<#
    }
#>
}

namespace TurkSoft.Service.Manager.Gib
{
<#
    foreach (var e in gibEntities)
    {
#>
    /// <summary> <#= e #> varlığı için GIB servis implementasyonu (iş katmanı). </summary>
    public partial class Gib<#= e #>Manager : EntityGibManager<<#= e #>, long>, TurkSoft.Service.Interface.Gib.IGib<#= e #>Service
    {
        public Gib<#= e #>Manager(GibAppDbContext db) : base(db)
        {
            OnConstructed();
        }

        /// <summary> İsteğe bağlı constructor sonrası kanca. </summary>
        partial void OnConstructed();
    }
<#
    }
#>
}
