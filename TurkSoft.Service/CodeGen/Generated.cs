
// <auto-generated>
//  Bu dosya T4 tarafından üretildi (Services.AllEntities.Generated.tt).
//  Elle düzenlemeyin; değişiklikleri .tt içinde yapın ve kaydedin.
// </auto-generated>

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using TurkSoft.Entities.EntityDB;
using TurkSoft.Business.Interface;
using TurkSoft.Service.Interface;
using TurkSoft.Service.Manager;

namespace TurkSoft.Service.Interface
{
    /// <summary> Kullanici varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IKullaniciService : IEntityService<Kullanici> { }
    /// <summary> Log varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ILogService : IEntityService<Log> { }
    /// <summary> MailAyar varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IMailAyarService : IEntityService<MailAyar> { }
    /// <summary> MailGonderim varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IMailGonderimService : IEntityService<MailGonderim> { }
    /// <summary> SmsAyar varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ISmsAyarService : IEntityService<SmsAyar> { }
    /// <summary> SmsGonderim varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ISmsGonderimService : IEntityService<SmsGonderim> { }
    /// <summary> WhatsappAyar varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IWhatsappAyarService : IEntityService<WhatsappAyar> { }
    /// <summary> WhatsappGonderim varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IWhatsappGonderimService : IEntityService<WhatsappGonderim> { }
    /// <summary> Luca varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ILucaService : IEntityService<Luca> { }
    /// <summary> KeyAccount varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IKeyAccountService : IEntityService<KeyAccount> { }
    /// <summary> UrunTipi varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IUrunTipiService : IEntityService<UrunTipi> { }
    /// <summary> Paket varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IPaketService : IEntityService<Paket> { }
    /// <summary> UrunFiyat varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IUrunFiyatService : IEntityService<UrunFiyat> { }
    /// <summary> PaketIskonto varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IPaketIskontoService : IEntityService<PaketIskonto> { }
    /// <summary> Bayi varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IBayiService : IEntityService<Bayi> { }
    /// <summary> BayiFirma varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IBayiFirmaService : IEntityService<BayiFirma> { }
    /// <summary> MaliMusavir varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IMaliMusavirService : IEntityService<MaliMusavir> { }
    /// <summary> Firma varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IFirmaService : IEntityService<Firma> { }
    /// <summary> Satis varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ISatisService : IEntityService<Satis> { }
    /// <summary> SatisKalem varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ISatisKalemService : IEntityService<SatisKalem> { }
    /// <summary> Lisans varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ILisansService : IEntityService<Lisans> { }
    /// <summary> LisansAdet varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ILisansAdetService : IEntityService<LisansAdet> { }
    /// <summary> Odeme varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IOdemeService : IEntityService<Odeme> { }
    /// <summary> SanalPos varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ISanalPosService : IEntityService<SanalPos> { }
    /// <summary> EntegrasyonHesabi varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IEntegrasyonHesabiService : IEntityService<EntegrasyonHesabi> { }
    /// <summary> Lead varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ILeadService : IEntityService<Lead> { }
    /// <summary> OpportunityAsama varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IOpportunityAsamaService : IEntityService<OpportunityAsama> { }
    /// <summary> Opportunity varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IOpportunityService : IEntityService<Opportunity> { }
    /// <summary> OpportunityAsamaGecis varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IOpportunityAsamaGecisService : IEntityService<OpportunityAsamaGecis> { }
    /// <summary> Teklif varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ITeklifService : IEntityService<Teklif> { }
    /// <summary> TeklifKalem varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ITeklifKalemService : IEntityService<TeklifKalem> { }
    /// <summary> Aktivite varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IAktiviteService : IEntityService<Aktivite> { }
    /// <summary> AktiviteAtama varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IAktiviteAtamaService : IEntityService<AktiviteAtama> { }
    /// <summary> IletisimKisi varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IIletisimKisiService : IEntityService<IletisimKisi> { }
    /// <summary> Fatura varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IFaturaService : IEntityService<Fatura> { }
    /// <summary> FaturaKalem varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IFaturaKalemService : IEntityService<FaturaKalem> { }
    /// <summary> BayiCari varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IBayiCariService : IEntityService<BayiCari> { }
    /// <summary> BayiCariHareket varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IBayiCariHareketService : IEntityService<BayiCariHareket> { }
    /// <summary> KomisyonOdemePlani varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IKomisyonOdemePlaniService : IEntityService<KomisyonOdemePlani> { }
    /// <summary> BayiKomisyonTarife varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IBayiKomisyonTarifeService : IEntityService<BayiKomisyonTarife> { }
    /// <summary> FiyatListesi varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IFiyatListesiService : IEntityService<FiyatListesi> { }
    /// <summary> FiyatListesiKalem varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IFiyatListesiKalemService : IEntityService<FiyatListesiKalem> { }
    /// <summary> VergiOrani varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IVergiOraniService : IEntityService<VergiOrani> { }
    /// <summary> Kupon varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IKuponService : IEntityService<Kupon> { }
    /// <summary> Not varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface INotService : IEntityService<Not> { }
    /// <summary> DosyaEk varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IDosyaEkService : IEntityService<DosyaEk> { }
    /// <summary> Etiket varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IEtiketService : IEntityService<Etiket> { }
    /// <summary> EtiketIliski varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IEtiketIliskiService : IEntityService<EtiketIliski> { }
    /// <summary> SistemBildirim varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface ISistemBildirimService : IEntityService<SistemBildirim> { }
    /// <summary> OutboxMesaj varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IOutboxMesajService : IEntityService<OutboxMesaj> { }
    /// <summary> WebhookAbonelik varlığı için uygulama servis sözleşmesi. </summary>
    public partial interface IWebhookAbonelikService : IEntityService<WebhookAbonelik> { }
}

namespace TurkSoft.Service.Manager
{
    /// <summary> Kullanici varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class KullaniciManager : EntityManager<Kullanici>, TurkSoft.Service.Interface.IKullaniciService
    {
        /// <summary> DI ile IBaseService&lt;Kullanici&gt; enjekte edilir. </summary>
        public KullaniciManager(IBaseService<Kullanici> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Log varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class LogManager : EntityManager<Log>, TurkSoft.Service.Interface.ILogService
    {
        /// <summary> DI ile IBaseService&lt;Log&gt; enjekte edilir. </summary>
        public LogManager(IBaseService<Log> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> MailAyar varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class MailAyarManager : EntityManager<MailAyar>, TurkSoft.Service.Interface.IMailAyarService
    {
        /// <summary> DI ile IBaseService&lt;MailAyar&gt; enjekte edilir. </summary>
        public MailAyarManager(IBaseService<MailAyar> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> MailGonderim varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class MailGonderimManager : EntityManager<MailGonderim>, TurkSoft.Service.Interface.IMailGonderimService
    {
        /// <summary> DI ile IBaseService&lt;MailGonderim&gt; enjekte edilir. </summary>
        public MailGonderimManager(IBaseService<MailGonderim> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> SmsAyar varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class SmsAyarManager : EntityManager<SmsAyar>, TurkSoft.Service.Interface.ISmsAyarService
    {
        /// <summary> DI ile IBaseService&lt;SmsAyar&gt; enjekte edilir. </summary>
        public SmsAyarManager(IBaseService<SmsAyar> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> SmsGonderim varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class SmsGonderimManager : EntityManager<SmsGonderim>, TurkSoft.Service.Interface.ISmsGonderimService
    {
        /// <summary> DI ile IBaseService&lt;SmsGonderim&gt; enjekte edilir. </summary>
        public SmsGonderimManager(IBaseService<SmsGonderim> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> WhatsappAyar varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class WhatsappAyarManager : EntityManager<WhatsappAyar>, TurkSoft.Service.Interface.IWhatsappAyarService
    {
        /// <summary> DI ile IBaseService&lt;WhatsappAyar&gt; enjekte edilir. </summary>
        public WhatsappAyarManager(IBaseService<WhatsappAyar> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> WhatsappGonderim varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class WhatsappGonderimManager : EntityManager<WhatsappGonderim>, TurkSoft.Service.Interface.IWhatsappGonderimService
    {
        /// <summary> DI ile IBaseService&lt;WhatsappGonderim&gt; enjekte edilir. </summary>
        public WhatsappGonderimManager(IBaseService<WhatsappGonderim> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Luca varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class LucaManager : EntityManager<Luca>, TurkSoft.Service.Interface.ILucaService
    {
        /// <summary> DI ile IBaseService&lt;Luca&gt; enjekte edilir. </summary>
        public LucaManager(IBaseService<Luca> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> KeyAccount varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class KeyAccountManager : EntityManager<KeyAccount>, TurkSoft.Service.Interface.IKeyAccountService
    {
        /// <summary> DI ile IBaseService&lt;KeyAccount&gt; enjekte edilir. </summary>
        public KeyAccountManager(IBaseService<KeyAccount> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> UrunTipi varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class UrunTipiManager : EntityManager<UrunTipi>, TurkSoft.Service.Interface.IUrunTipiService
    {
        /// <summary> DI ile IBaseService&lt;UrunTipi&gt; enjekte edilir. </summary>
        public UrunTipiManager(IBaseService<UrunTipi> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Paket varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class PaketManager : EntityManager<Paket>, TurkSoft.Service.Interface.IPaketService
    {
        /// <summary> DI ile IBaseService&lt;Paket&gt; enjekte edilir. </summary>
        public PaketManager(IBaseService<Paket> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> UrunFiyat varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class UrunFiyatManager : EntityManager<UrunFiyat>, TurkSoft.Service.Interface.IUrunFiyatService
    {
        /// <summary> DI ile IBaseService&lt;UrunFiyat&gt; enjekte edilir. </summary>
        public UrunFiyatManager(IBaseService<UrunFiyat> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> PaketIskonto varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class PaketIskontoManager : EntityManager<PaketIskonto>, TurkSoft.Service.Interface.IPaketIskontoService
    {
        /// <summary> DI ile IBaseService&lt;PaketIskonto&gt; enjekte edilir. </summary>
        public PaketIskontoManager(IBaseService<PaketIskonto> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Bayi varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class BayiManager : EntityManager<Bayi>, TurkSoft.Service.Interface.IBayiService
    {
        /// <summary> DI ile IBaseService&lt;Bayi&gt; enjekte edilir. </summary>
        public BayiManager(IBaseService<Bayi> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> BayiFirma varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class BayiFirmaManager : EntityManager<BayiFirma>, TurkSoft.Service.Interface.IBayiFirmaService
    {
        /// <summary> DI ile IBaseService&lt;BayiFirma&gt; enjekte edilir. </summary>
        public BayiFirmaManager(IBaseService<BayiFirma> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> MaliMusavir varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class MaliMusavirManager : EntityManager<MaliMusavir>, TurkSoft.Service.Interface.IMaliMusavirService
    {
        /// <summary> DI ile IBaseService&lt;MaliMusavir&gt; enjekte edilir. </summary>
        public MaliMusavirManager(IBaseService<MaliMusavir> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Firma varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class FirmaManager : EntityManager<Firma>, TurkSoft.Service.Interface.IFirmaService
    {
        /// <summary> DI ile IBaseService&lt;Firma&gt; enjekte edilir. </summary>
        public FirmaManager(IBaseService<Firma> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Satis varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class SatisManager : EntityManager<Satis>, TurkSoft.Service.Interface.ISatisService
    {
        /// <summary> DI ile IBaseService&lt;Satis&gt; enjekte edilir. </summary>
        public SatisManager(IBaseService<Satis> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> SatisKalem varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class SatisKalemManager : EntityManager<SatisKalem>, TurkSoft.Service.Interface.ISatisKalemService
    {
        /// <summary> DI ile IBaseService&lt;SatisKalem&gt; enjekte edilir. </summary>
        public SatisKalemManager(IBaseService<SatisKalem> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Lisans varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class LisansManager : EntityManager<Lisans>, TurkSoft.Service.Interface.ILisansService
    {
        /// <summary> DI ile IBaseService&lt;Lisans&gt; enjekte edilir. </summary>
        public LisansManager(IBaseService<Lisans> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> LisansAdet varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class LisansAdetManager : EntityManager<LisansAdet>, TurkSoft.Service.Interface.ILisansAdetService
    {
        /// <summary> DI ile IBaseService&lt;LisansAdet&gt; enjekte edilir. </summary>
        public LisansAdetManager(IBaseService<LisansAdet> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Odeme varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class OdemeManager : EntityManager<Odeme>, TurkSoft.Service.Interface.IOdemeService
    {
        /// <summary> DI ile IBaseService&lt;Odeme&gt; enjekte edilir. </summary>
        public OdemeManager(IBaseService<Odeme> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> SanalPos varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class SanalPosManager : EntityManager<SanalPos>, TurkSoft.Service.Interface.ISanalPosService
    {
        /// <summary> DI ile IBaseService&lt;SanalPos&gt; enjekte edilir. </summary>
        public SanalPosManager(IBaseService<SanalPos> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> EntegrasyonHesabi varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class EntegrasyonHesabiManager : EntityManager<EntegrasyonHesabi>, TurkSoft.Service.Interface.IEntegrasyonHesabiService
    {
        /// <summary> DI ile IBaseService&lt;EntegrasyonHesabi&gt; enjekte edilir. </summary>
        public EntegrasyonHesabiManager(IBaseService<EntegrasyonHesabi> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Lead varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class LeadManager : EntityManager<Lead>, TurkSoft.Service.Interface.ILeadService
    {
        /// <summary> DI ile IBaseService&lt;Lead&gt; enjekte edilir. </summary>
        public LeadManager(IBaseService<Lead> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> OpportunityAsama varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class OpportunityAsamaManager : EntityManager<OpportunityAsama>, TurkSoft.Service.Interface.IOpportunityAsamaService
    {
        /// <summary> DI ile IBaseService&lt;OpportunityAsama&gt; enjekte edilir. </summary>
        public OpportunityAsamaManager(IBaseService<OpportunityAsama> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Opportunity varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class OpportunityManager : EntityManager<Opportunity>, TurkSoft.Service.Interface.IOpportunityService
    {
        /// <summary> DI ile IBaseService&lt;Opportunity&gt; enjekte edilir. </summary>
        public OpportunityManager(IBaseService<Opportunity> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> OpportunityAsamaGecis varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class OpportunityAsamaGecisManager : EntityManager<OpportunityAsamaGecis>, TurkSoft.Service.Interface.IOpportunityAsamaGecisService
    {
        /// <summary> DI ile IBaseService&lt;OpportunityAsamaGecis&gt; enjekte edilir. </summary>
        public OpportunityAsamaGecisManager(IBaseService<OpportunityAsamaGecis> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Teklif varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class TeklifManager : EntityManager<Teklif>, TurkSoft.Service.Interface.ITeklifService
    {
        /// <summary> DI ile IBaseService&lt;Teklif&gt; enjekte edilir. </summary>
        public TeklifManager(IBaseService<Teklif> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> TeklifKalem varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class TeklifKalemManager : EntityManager<TeklifKalem>, TurkSoft.Service.Interface.ITeklifKalemService
    {
        /// <summary> DI ile IBaseService&lt;TeklifKalem&gt; enjekte edilir. </summary>
        public TeklifKalemManager(IBaseService<TeklifKalem> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Aktivite varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class AktiviteManager : EntityManager<Aktivite>, TurkSoft.Service.Interface.IAktiviteService
    {
        /// <summary> DI ile IBaseService&lt;Aktivite&gt; enjekte edilir. </summary>
        public AktiviteManager(IBaseService<Aktivite> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> AktiviteAtama varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class AktiviteAtamaManager : EntityManager<AktiviteAtama>, TurkSoft.Service.Interface.IAktiviteAtamaService
    {
        /// <summary> DI ile IBaseService&lt;AktiviteAtama&gt; enjekte edilir. </summary>
        public AktiviteAtamaManager(IBaseService<AktiviteAtama> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> IletisimKisi varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class IletisimKisiManager : EntityManager<IletisimKisi>, TurkSoft.Service.Interface.IIletisimKisiService
    {
        /// <summary> DI ile IBaseService&lt;IletisimKisi&gt; enjekte edilir. </summary>
        public IletisimKisiManager(IBaseService<IletisimKisi> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Fatura varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class FaturaManager : EntityManager<Fatura>, TurkSoft.Service.Interface.IFaturaService
    {
        /// <summary> DI ile IBaseService&lt;Fatura&gt; enjekte edilir. </summary>
        public FaturaManager(IBaseService<Fatura> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> FaturaKalem varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class FaturaKalemManager : EntityManager<FaturaKalem>, TurkSoft.Service.Interface.IFaturaKalemService
    {
        /// <summary> DI ile IBaseService&lt;FaturaKalem&gt; enjekte edilir. </summary>
        public FaturaKalemManager(IBaseService<FaturaKalem> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> BayiCari varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class BayiCariManager : EntityManager<BayiCari>, TurkSoft.Service.Interface.IBayiCariService
    {
        /// <summary> DI ile IBaseService&lt;BayiCari&gt; enjekte edilir. </summary>
        public BayiCariManager(IBaseService<BayiCari> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> BayiCariHareket varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class BayiCariHareketManager : EntityManager<BayiCariHareket>, TurkSoft.Service.Interface.IBayiCariHareketService
    {
        /// <summary> DI ile IBaseService&lt;BayiCariHareket&gt; enjekte edilir. </summary>
        public BayiCariHareketManager(IBaseService<BayiCariHareket> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> KomisyonOdemePlani varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class KomisyonOdemePlaniManager : EntityManager<KomisyonOdemePlani>, TurkSoft.Service.Interface.IKomisyonOdemePlaniService
    {
        /// <summary> DI ile IBaseService&lt;KomisyonOdemePlani&gt; enjekte edilir. </summary>
        public KomisyonOdemePlaniManager(IBaseService<KomisyonOdemePlani> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> BayiKomisyonTarife varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class BayiKomisyonTarifeManager : EntityManager<BayiKomisyonTarife>, TurkSoft.Service.Interface.IBayiKomisyonTarifeService
    {
        /// <summary> DI ile IBaseService&lt;BayiKomisyonTarife&gt; enjekte edilir. </summary>
        public BayiKomisyonTarifeManager(IBaseService<BayiKomisyonTarife> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> FiyatListesi varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class FiyatListesiManager : EntityManager<FiyatListesi>, TurkSoft.Service.Interface.IFiyatListesiService
    {
        /// <summary> DI ile IBaseService&lt;FiyatListesi&gt; enjekte edilir. </summary>
        public FiyatListesiManager(IBaseService<FiyatListesi> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> FiyatListesiKalem varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class FiyatListesiKalemManager : EntityManager<FiyatListesiKalem>, TurkSoft.Service.Interface.IFiyatListesiKalemService
    {
        /// <summary> DI ile IBaseService&lt;FiyatListesiKalem&gt; enjekte edilir. </summary>
        public FiyatListesiKalemManager(IBaseService<FiyatListesiKalem> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> VergiOrani varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class VergiOraniManager : EntityManager<VergiOrani>, TurkSoft.Service.Interface.IVergiOraniService
    {
        /// <summary> DI ile IBaseService&lt;VergiOrani&gt; enjekte edilir. </summary>
        public VergiOraniManager(IBaseService<VergiOrani> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Kupon varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class KuponManager : EntityManager<Kupon>, TurkSoft.Service.Interface.IKuponService
    {
        /// <summary> DI ile IBaseService&lt;Kupon&gt; enjekte edilir. </summary>
        public KuponManager(IBaseService<Kupon> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Not varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class NotManager : EntityManager<Not>, TurkSoft.Service.Interface.INotService
    {
        /// <summary> DI ile IBaseService&lt;Not&gt; enjekte edilir. </summary>
        public NotManager(IBaseService<Not> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> DosyaEk varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class DosyaEkManager : EntityManager<DosyaEk>, TurkSoft.Service.Interface.IDosyaEkService
    {
        /// <summary> DI ile IBaseService&lt;DosyaEk&gt; enjekte edilir. </summary>
        public DosyaEkManager(IBaseService<DosyaEk> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> Etiket varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class EtiketManager : EntityManager<Etiket>, TurkSoft.Service.Interface.IEtiketService
    {
        /// <summary> DI ile IBaseService&lt;Etiket&gt; enjekte edilir. </summary>
        public EtiketManager(IBaseService<Etiket> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> EtiketIliski varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class EtiketIliskiManager : EntityManager<EtiketIliski>, TurkSoft.Service.Interface.IEtiketIliskiService
    {
        /// <summary> DI ile IBaseService&lt;EtiketIliski&gt; enjekte edilir. </summary>
        public EtiketIliskiManager(IBaseService<EtiketIliski> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> SistemBildirim varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class SistemBildirimManager : EntityManager<SistemBildirim>, TurkSoft.Service.Interface.ISistemBildirimService
    {
        /// <summary> DI ile IBaseService&lt;SistemBildirim&gt; enjekte edilir. </summary>
        public SistemBildirimManager(IBaseService<SistemBildirim> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> OutboxMesaj varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class OutboxMesajManager : EntityManager<OutboxMesaj>, TurkSoft.Service.Interface.IOutboxMesajService
    {
        /// <summary> DI ile IBaseService&lt;OutboxMesaj&gt; enjekte edilir. </summary>
        public OutboxMesajManager(IBaseService<OutboxMesaj> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
    /// <summary> WebhookAbonelik varlığı için servis implementasyonu (iş katmanı). </summary>
    public partial class WebhookAbonelikManager : EntityManager<WebhookAbonelik>, TurkSoft.Service.Interface.IWebhookAbonelikService
    {
        /// <summary> DI ile IBaseService&lt;WebhookAbonelik&gt; enjekte edilir. </summary>
        public WebhookAbonelikManager(IBaseService<WebhookAbonelik> baseBusiness) : base(baseBusiness)
        {
            OnConstructed();
        }

        /// <summary>
        /// Manuel partial sınıfta opsiyonel olarak implement edilebilen "constructor sonrası" kanca.
        /// </summary>
        partial void OnConstructed();
    }
}
